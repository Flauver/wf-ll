# Rime schema
# encoding: utf-8

schema:
  schema_id: &schema LL
  name: 离乱
  version: release
  author:
    - 荒
  dependencies:
    - &py PY
    - &bh xtroke
    - &cf LL_chaifen
    - &ll LL_linglong
  description: |
    前缀码 + 高性能多重简词
    ` 键拼音反查，e在「,」，i在「.」。symbols符号输入同理。

switches:
  - name: buffered
    states: [结束造词, 开始造词]
    reset: 0
  - name: charset_filter
    states: [ 大字集, 常用字 ]
    reset: 1
  - name: chars_cand
    states: [ 字候选关, 字候选开 ]
    reset: 1 
  - options:
      - ll_spelling.off
      - ll_spelling.lv1
      - ll_spelling.lv2
      - ll_spelling.lv3
    states: [ 无注解, 一重注解, 二重注解, 多重注解 ]
    reset: 0
  - name: ascii_mode
    reset: 0
    states: [  中, 英  ]
  - name: full_shape
    states: [  半, 全  ]
    reset: 0
  - name: ascii_punct
    states: [ "。", "．" ]
    reset: 0

engine:
  processors:
    - lua_processor@*ll.chars_cand
    - ascii_composer
    - recognizer
    - lua_processor@*ll.div_spelling*processor
    - key_binder
    - lua_processor@*ll.popping
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@PY_lookup
    - affix_segmentor@xtroke_lookup
    - affix_segmentor@reverse_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - history_translator
    - script_translator@PY_lookup
    - table_translator@xtroke_lookup
    - table_translator@fixed
    - table_translator@custom_phrase
    - table_translator
    - lua_translator@*ll.speed_stats
    - history_translator@historyX
  filters: 
    - lua_filter@*ll.charset_filter
    - lua_filter@*ll.fix_filter
    - reverse_lookup_filter@reverse_lookup
    - lua_filter@*ll.div_spelling*filter
    - uniquifier 

speller:
  alphabet: qwrtyuopasdfghjkl;'zxcvbnm,./]
  delimiter: "`"
  auto_select: true

fixed:
  __include: translator
  dictionary: *ll
  prism: *ll
  enable_user_dict: false
  enable_sentence: false
  initial_quality: 100000

custom_phrase: # 自定義短語
  dictionary: ""
  user_dict: LL_custom_phrases
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 10000

translator:
  dictionary: *schema
  prism: *schema
  enable_completion: false
  enable_sentence: false
  enable_user_dict: true
  enable_encoder: true
  encode_commit_history: false
  max_phrase_length: 4
  always_show_comments: true
  initial_quality: 1000
  preedit_format: []
  comment_format:
    - "xform/^~/ /"

# 拼音反查
reverse_lookup:
  tag: reverse_lookup
  dictionary: *schema
  prefix: "`"    # 反查引导符「`」
  tips: 【反查：拼音+超级笔画】
  closing_tips: 【反查关闭】
  tags: [ PY_lookup, xtroke_lookup ]
  extra_tags:
    - PY_lookup
    - xtroke_lookup
  comment_format: 
    - xform/\]/根/

PY_lookup:
  tag: PY_lookup
  dictionary: *py
  enable_user_dict: false
  prefix: '`P'
  tips: 【拼音反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.2
  preedit_format:
    - xform/,/e/
    - xform/\./i/

xtroke_lookup:
  tag: xtroke_lookup
  dictionary: *bh
  prism: xtroke
  enable_user_dict: false
  prefix: '`X'
  tips: 【超级笔画反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.5
  preedit_format:
    - 'xform/^([hspnz]+)$/$1\t（\U$1\E）/'
    - xlit/HSPNZ/一丨丿丶乙/
  comment_format: []

historyX:
  input: 'wj'
  size: 10
  initial_quality: 10

ll:
  code: *schema
  tags: [ abc ]
  # emoji examples: ⚡️ 👤 🔝 🔥 ✨ ⬆️ 🫵🏻 🗲 🎯 📌 💡 🌟
  quick_code_indicator: "🌟"
  custom_phrases_indicator: "💡"
  spelling:
    schema: *cf
    cycle_key: "Shift+Control+C"
    switch_key: "Control+c"
    phrase: 1

key_binder:
  bindings:
    - {accept: "e", send: "A", when: has_menu}
    - {accept: "i", send: "B", when: has_menu}
    - {accept: "[", send: "C", when: has_menu}
    - {accept: Tab, send: "C", when: has_menu}
    - {accept: 1, send: "0", when: has_menu}
    - {accept: 4, send: "7", when: has_menu}
    #- {accept: "Control+Control_L", send: "8", when: has_menu}
    - {accept: "Shift+Shift_L", send: "9", when: has_menu}
    - {accept: i, toggle: buffered, when: always}
    - {accept: "Control+k", send: "Shift+Delete", when: has_menu}
    - {accept: "5", toggle: charset_filter, when: has_menu}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    #- {accept: Return, send: Escape, when: composing}    # 回车清屏
    - {accept: "Control+Shift+O", toggle: full_shape, when: always}
    - {accept: "Control+Shift+N", toggle: ascii_mode, when: always}

menu:
  alternative_select_labels: [ '_', 'e', 'i', 'T|[', '2', '3', '4|7', 'C|8', 'S|9', '1|0']
  alternative_select_keys: "_ABC237890"
  page_size: 10

punctuator:
  half_shape:
    ',' : []
    '.' : []
    '<' : [ 《, 〈, «, ‹, ⟨, ˂, ˱ ]
    '>' : [ 》, 〉, », ›, ⟩, ˃, ˲ ]
    '/' : []
    '?' : { commit: ？ }
    ';' : []
    ':' : { commit: ： }
    '''': { commit: 。 }
    '"' : { pair: [ '“', '”' ] }
    '\' : { commit: 、 }
    '|' : [ ·, ・, '|', ｜, '§', '¦', '‖' ]
    '`' : [ '`', ‵, ‶, ‷, ′, ″, ‴, ⁗ ]
    '~' : [ '~', ～, ˜, ˷, ⸯ, ≈, ≋, ≃, ≅, ≇, ∽, ⋍, ≌, ﹏, ﹋, ﹌, ︴ ]
    '!' : { commit: ！ }
    '@' : [ '@', ©, ®, ℗ ]
    '#' : [ '#', № ]
    '%' : [ '%', ％, '°', '℃', ‰, ‱, ℉, ℅, ℆, ℀, ℁, ⅍ ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤', ₩ ]
    '^' : { commit: …… }
    '&' : '&'
    '*' : [ '*', ＊, ·, ・, ×, ※, ❂, ⁂, ☮, ☯, ☣ ]
    '(' : （
    ')' : ）
    '-' : '-'
    '_' : ——
    '+' : '+'
    '=' : [ '=', 々, 〃 ]
    '[' : [ 「, 【, 〔, ［, 〚, 〘 ]
    ']' : [ 」, 】, 〕, ］, 〛, 〙 ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]
  full_shape:
    ',' : []
    '.' : []
    '<' : [ 《, 〈, «, ‹, ⟨, ˂, ˱ ]
    '>' : [ 》, 〉, », ›, ⟩, ˃, ˲ ]
    '/' : []
    '?' : { commit: ？ }
    ';' : []
    ':' : { commit: ： }
    '''': { commit: 。 }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ 、, '\', ＼ ]
    '|' : [ ·, ・, '|', ｜, '§', '¦', '‖', ︴ ]
    '`' : [ '`', ‵, ‶, ‷, ′, ″, ‴, ⁗ ]
    '~' : [ '~', ～, ˜, ˷, ⸯ, ≈, ≋, ≃, ≅, ≇, ∽, ⋍, ≌, ﹏, ﹋, ﹌, ︴ ]
    '!' : { commit: ！ }
    '@' : [ '@', ©, ®, ℗ ]
    '#' : [ '#', № ]
    '%' : [ '%', ％, '°', '℃', ‰, ‱, ℉, ℅, ℆, ℀, ℁, ⅍ ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤', ₩ ]
    '^' : { commit: …… }
    '&' : '&'
    '*' : [ '*', ＊, ·, ・, ×, ※, ❂, ⁂, ☮, ☯, ☣ ]
    '(' : （
    ')' : ）
    '-' : '-'
    '_' : ——
    '+' : '+'
    '=' : [ '=', 々, 〃 ]
    '[' : [ 「, 【, 〔, ［, 〚, 〘 ]
    ']' : [ 」, 】, 〕, ］, 〛, 〙 ]
    '{' : [ 『, 〖, ｛ ]
    '}' : [ 』, 〗, ｝ ]
  symbols:
    __include: symbols:/punctuator/symbols

recognizer:
  #import_preset: default
  patterns:
    reverse_lookup: "^`([qwrtyuopasdfghjklzxcvbnm,.]+?)*$"
    PY_lookup: "^`P([qwrtyuopasdfghjklzxcvbnm,.]+'?)*$"
    xtroke_lookup: "^`X([hspnz]+'?)*$"
    roots: "][qwrtyuopasdfghjklzxcvbnm;,/]*"
    punct: '^\|([QWRTYUOPASDFGHJKLZXCVBNM<>qwrtyuopasdfghjklzxcvbnm,.]+)$'
